//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Template 03</summary>
	[PublishedContentModel("template03")]
	public partial class Template03 : PublishedContentModel, ICallToActionPanel, INavigation, IPersonalNotes, IRotatingBanner, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "template03";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Template03(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Template03, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background Image: *Required
		///</summary>
		[ImplementPropertyType("ctap_backgroundImage")]
		public IPublishedContent Ctap_backgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetCtap_backgroundImage(this); }
		}

		///<summary>
		/// Call to Action Link: *Optional: CTA Text & Link are both required to show button.
		///</summary>
		[ImplementPropertyType("ctap_callToActionLink")]
		public IPublishedContent Ctap_callToActionLink
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetCtap_callToActionLink(this); }
		}

		///<summary>
		/// Call to Action Text: *Optional: CTA Text & Link are both required to show button.
		///</summary>
		[ImplementPropertyType("ctap_callToActionText")]
		public string Ctap_callToActionText
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetCtap_callToActionText(this); }
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("ctap_content")]
		public string Ctap_content
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetCtap_content(this); }
		}

		///<summary>
		/// Image on Right: Default is the left-hand side.  Select if the image panel is to appear on the right.
		///</summary>
		[ImplementPropertyType("ctap_imageOnRight")]
		public bool Ctap_imageOnRight
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetCtap_imageOnRight(this); }
		}

		///<summary>
		/// Text Alignment: Default is left aligned.
		///</summary>
		[ImplementPropertyType("ctap_textAlignment")]
		public object Ctap_textAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetCtap_textAlignment(this); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("ctap_title")]
		public string Ctap_title
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetCtap_title(this); }
		}

		///<summary>
		/// Content Properties
		///</summary>
		[ImplementPropertyType("lblContentProperties")]
		public string LblContentProperties
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetLblContentProperties(this); }
		}

		///<summary>
		/// Image Properties
		///</summary>
		[ImplementPropertyType("lblImageProperties")]
		public string LblImageProperties
		{
			get { return Umbraco.Web.PublishedContentModels.CallToActionPanel.GetLblImageProperties(this); }
		}

		///<summary>
		/// Side Navigation: This selection is used in conjunction with "Template 2" or "Template 4", in addition this is only for level 3 and 4 pages.
		///</summary>
		[ImplementPropertyType("allowInSideNav")]
		public bool AllowInSideNav
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetAllowInSideNav(this); }
		}

		///<summary>
		/// Eyebrow Navigation
		///</summary>
		[ImplementPropertyType("showInEyebrowNavigation")]
		public bool ShowInEyebrowNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInEyebrowNavigation(this); }
		}

		///<summary>
		/// Footer Navigation
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInFooter(this); }
		}

		///<summary>
		/// Mega Menu Navigation: This selection also determines what shows in the mobile navigation.
		///</summary>
		[ImplementPropertyType("showInMegamenu")]
		public bool ShowInMegamenu
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInMegamenu(this); }
		}

		///<summary>
		/// Drop Down Navigation
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInNavigation(this); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("notes")]
		public IHtmlString Notes
		{
			get { return Umbraco.Web.PublishedContentModels.PersonalNotes.GetNotes(this); }
		}

		///<summary>
		/// Rotating Banners: Select 4 banners to display in the rotator.
		///</summary>
		[ImplementPropertyType("rotatingBanners")]
		public IEnumerable<IPublishedContent> RotatingBanners
		{
			get { return Umbraco.Web.PublishedContentModels.RotatingBanner.GetRotatingBanners(this); }
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Hide page from XML Sitemap
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}
	}
}
