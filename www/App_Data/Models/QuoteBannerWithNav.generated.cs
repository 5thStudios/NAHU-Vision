//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1353 with alias "quoteBannerWithNav"
	/// <summary>Quote Banner with Navigation</summary>
	public partial interface IQuoteBannerWithNav : IPublishedContent
	{
		/// <summary>Drop Shadow</summary>
		object DropShadow { get; }

		/// <summary>Author</summary>
		string Qwn_author { get; }

		/// <summary>Background Image</summary>
		IPublishedContent Qwn_backgroundImage { get; }

		/// <summary>Quote</summary>
		string Qwn_quote { get; }

		/// <summary>Side Banner Links</summary>
		IEnumerable<IPublishedContent> Qwn_sideNav { get; }

		/// <summary>Text Alignment</summary>
		object Qwn_textAlignment { get; }

		/// <summary>Use Native Dimensions</summary>
		bool UseNativeDimensions { get; }
	}

	/// <summary>Quote Banner with Navigation</summary>
	[PublishedContentModel("quoteBannerWithNav")]
	public partial class QuoteBannerWithNav : PublishedContentModel, IQuoteBannerWithNav
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "quoteBannerWithNav";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public QuoteBannerWithNav(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<QuoteBannerWithNav, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Drop Shadow
		///</summary>
		[ImplementPropertyType("dropShadow")]
		public object DropShadow
		{
			get { return GetDropShadow(this); }
		}

		/// <summary>Static getter for Drop Shadow</summary>
		public static object GetDropShadow(IQuoteBannerWithNav that) { return that.GetPropertyValue("dropShadow"); }

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("qwn_author")]
		public string Qwn_author
		{
			get { return GetQwn_author(this); }
		}

		/// <summary>Static getter for Author</summary>
		public static string GetQwn_author(IQuoteBannerWithNav that) { return that.GetPropertyValue<string>("qwn_author"); }

		///<summary>
		/// Background Image: The "FullBanner" crop will be used for the selected image.
		///</summary>
		[ImplementPropertyType("qwn_backgroundImage")]
		public IPublishedContent Qwn_backgroundImage
		{
			get { return GetQwn_backgroundImage(this); }
		}

		/// <summary>Static getter for Background Image</summary>
		public static IPublishedContent GetQwn_backgroundImage(IQuoteBannerWithNav that) { return that.GetPropertyValue<IPublishedContent>("qwn_backgroundImage"); }

		///<summary>
		/// Quote
		///</summary>
		[ImplementPropertyType("qwn_quote")]
		public string Qwn_quote
		{
			get { return GetQwn_quote(this); }
		}

		/// <summary>Static getter for Quote</summary>
		public static string GetQwn_quote(IQuoteBannerWithNav that) { return that.GetPropertyValue<string>("qwn_quote"); }

		///<summary>
		/// Side Banner Links: Select existing items from “Content } Data } Banner Links”.    If this selection is left empty, the quote will take up the entire space.    A max number of eight items can be selected.
		///</summary>
		[ImplementPropertyType("qwn_sideNav")]
		public IEnumerable<IPublishedContent> Qwn_sideNav
		{
			get { return GetQwn_sideNav(this); }
		}

		/// <summary>Static getter for Side Banner Links</summary>
		public static IEnumerable<IPublishedContent> GetQwn_sideNav(IQuoteBannerWithNav that) { return that.GetPropertyValue<IEnumerable<IPublishedContent>>("qwn_sideNav"); }

		///<summary>
		/// Text Alignment: Default is left aligned.
		///</summary>
		[ImplementPropertyType("qwn_textAlignment")]
		public object Qwn_textAlignment
		{
			get { return GetQwn_textAlignment(this); }
		}

		/// <summary>Static getter for Text Alignment</summary>
		public static object GetQwn_textAlignment(IQuoteBannerWithNav that) { return that.GetPropertyValue("qwn_textAlignment"); }

		///<summary>
		/// Use Native Dimensions: Selecting this option will remove all parameters from the background image and use it's native style.
		///</summary>
		[ImplementPropertyType("useNativeDimensions")]
		public bool UseNativeDimensions
		{
			get { return GetUseNativeDimensions(this); }
		}

		/// <summary>Static getter for Use Native Dimensions</summary>
		public static bool GetUseNativeDimensions(IQuoteBannerWithNav that) { return that.GetPropertyValue<bool>("useNativeDimensions"); }
	}
}
