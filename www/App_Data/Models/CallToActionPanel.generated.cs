//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1385 with alias "callToActionPanel"
	/// <summary>Call to Action Panel</summary>
	public partial interface ICallToActionPanel : IPublishedContent
	{
		/// <summary>Background Image</summary>
		IPublishedContent Ctap_backgroundImage { get; }

		/// <summary>Call to Action Link</summary>
		IPublishedContent Ctap_callToActionLink { get; }

		/// <summary>Call to Action Text</summary>
		string Ctap_callToActionText { get; }

		/// <summary>Content</summary>
		string Ctap_content { get; }

		/// <summary>Image on Right</summary>
		bool Ctap_imageOnRight { get; }

		/// <summary>Text Alignment</summary>
		object Ctap_textAlignment { get; }

		/// <summary>Title</summary>
		string Ctap_title { get; }

		/// <summary>Content Properties</summary>
		string LblContentProperties { get; }

		/// <summary>Image Properties</summary>
		string LblImageProperties { get; }
	}

	/// <summary>Call to Action Panel</summary>
	[PublishedContentModel("callToActionPanel")]
	public partial class CallToActionPanel : PublishedContentModel, ICallToActionPanel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "callToActionPanel";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CallToActionPanel(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CallToActionPanel, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Background Image: *Required
		///</summary>
		[ImplementPropertyType("ctap_backgroundImage")]
		public IPublishedContent Ctap_backgroundImage
		{
			get { return GetCtap_backgroundImage(this); }
		}

		/// <summary>Static getter for Background Image</summary>
		public static IPublishedContent GetCtap_backgroundImage(ICallToActionPanel that) { return that.GetPropertyValue<IPublishedContent>("ctap_backgroundImage"); }

		///<summary>
		/// Call to Action Link: *Optional: CTA Text & Link are both required to show button.
		///</summary>
		[ImplementPropertyType("ctap_callToActionLink")]
		public IPublishedContent Ctap_callToActionLink
		{
			get { return GetCtap_callToActionLink(this); }
		}

		/// <summary>Static getter for Call to Action Link</summary>
		public static IPublishedContent GetCtap_callToActionLink(ICallToActionPanel that) { return that.GetPropertyValue<IPublishedContent>("ctap_callToActionLink"); }

		///<summary>
		/// Call to Action Text: *Optional: CTA Text & Link are both required to show button.
		///</summary>
		[ImplementPropertyType("ctap_callToActionText")]
		public string Ctap_callToActionText
		{
			get { return GetCtap_callToActionText(this); }
		}

		/// <summary>Static getter for Call to Action Text</summary>
		public static string GetCtap_callToActionText(ICallToActionPanel that) { return that.GetPropertyValue<string>("ctap_callToActionText"); }

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("ctap_content")]
		public string Ctap_content
		{
			get { return GetCtap_content(this); }
		}

		/// <summary>Static getter for Content</summary>
		public static string GetCtap_content(ICallToActionPanel that) { return that.GetPropertyValue<string>("ctap_content"); }

		///<summary>
		/// Image on Right: Default is the left-hand side.  Select if the image panel is to appear on the right.
		///</summary>
		[ImplementPropertyType("ctap_imageOnRight")]
		public bool Ctap_imageOnRight
		{
			get { return GetCtap_imageOnRight(this); }
		}

		/// <summary>Static getter for Image on Right</summary>
		public static bool GetCtap_imageOnRight(ICallToActionPanel that) { return that.GetPropertyValue<bool>("ctap_imageOnRight"); }

		///<summary>
		/// Text Alignment: Default is left aligned.
		///</summary>
		[ImplementPropertyType("ctap_textAlignment")]
		public object Ctap_textAlignment
		{
			get { return GetCtap_textAlignment(this); }
		}

		/// <summary>Static getter for Text Alignment</summary>
		public static object GetCtap_textAlignment(ICallToActionPanel that) { return that.GetPropertyValue("ctap_textAlignment"); }

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("ctap_title")]
		public string Ctap_title
		{
			get { return GetCtap_title(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetCtap_title(ICallToActionPanel that) { return that.GetPropertyValue<string>("ctap_title"); }

		///<summary>
		/// Content Properties
		///</summary>
		[ImplementPropertyType("lblContentProperties")]
		public string LblContentProperties
		{
			get { return GetLblContentProperties(this); }
		}

		/// <summary>Static getter for Content Properties</summary>
		public static string GetLblContentProperties(ICallToActionPanel that) { return that.GetPropertyValue<string>("lblContentProperties"); }

		///<summary>
		/// Image Properties
		///</summary>
		[ImplementPropertyType("lblImageProperties")]
		public string LblImageProperties
		{
			get { return GetLblImageProperties(this); }
		}

		/// <summary>Static getter for Image Properties</summary>
		public static string GetLblImageProperties(ICallToActionPanel that) { return that.GetPropertyValue<string>("lblImageProperties"); }
	}
}
