//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Entry - Locked</summary>
	[PublishedContentModel("lockedBlogEntry")]
	public partial class LockedBlogEntry : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "lockedBlogEntry";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public LockedBlogEntry(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<LockedBlogEntry, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("author")]
		public object Author
		{
			get { return this.GetPropertyValue("author"); }
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("content")]
		public IHtmlString Content
		{
			get { return this.GetPropertyValue<IHtmlString>("content"); }
		}

		///<summary>
		/// Featured Image
		///</summary>
		[ImplementPropertyType("featuredImage")]
		public string FeaturedImage
		{
			get { return this.GetPropertyValue<string>("featuredImage"); }
		}

		///<summary>
		/// Featured Options: Select which type of featured image or video should be displayed.
		///</summary>
		[ImplementPropertyType("featuredOptions")]
		public object FeaturedOptions
		{
			get { return this.GetPropertyValue("featuredOptions"); }
		}

		///<summary>
		/// Featured Video: Will only be used if 'Featured Options' is set to either a youtube or vimeo video.  To add video, simply add the video's id.  Example: If the video's url is https://www.youtube.com/embed/aiBt44rrslw?ecver=1 the video ID will be "aiBt44rrslw"
		///</summary>
		[ImplementPropertyType("featuredVideo")]
		public string FeaturedVideo
		{
			get { return this.GetPropertyValue<string>("featuredVideo"); }
		}

		///<summary>
		/// Navigation Title: This is used in feature widgets. Example: Homepage
		///</summary>
		[ImplementPropertyType("navigationTitle")]
		public string NavigationTitle
		{
			get { return this.GetPropertyValue<string>("navigationTitle"); }
		}

		///<summary>
		/// Post Date
		///</summary>
		[ImplementPropertyType("postDate")]
		public DateTime PostDate
		{
			get { return this.GetPropertyValue<DateTime>("postDate"); }
		}

		///<summary>
		/// Summary
		///</summary>
		[ImplementPropertyType("summary")]
		public string Summary
		{
			get { return this.GetPropertyValue<string>("summary"); }
		}

		///<summary>
		/// Tags
		///</summary>
		[ImplementPropertyType("tags")]
		public IEnumerable<IPublishedContent> Tags
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("tags"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}

		///<summary>
		/// Vimeo Image Id: Only used if a vimeo video is being displayed.
		///</summary>
		[ImplementPropertyType("vimeoImageId")]
		public string VimeoImageId
		{
			get { return this.GetPropertyValue<string>("vimeoImageId"); }
		}

		///<summary>
		/// Widescreen Video: Will only be used for featured videos.
		///</summary>
		[ImplementPropertyType("widescreenVideo")]
		public bool WidescreenVideo
		{
			get { return this.GetPropertyValue<bool>("widescreenVideo"); }
		}
	}
}
