//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1469 with alias "navigation"
	/// <summary>Navigation</summary>
	public partial interface INavigation : IPublishedContent
	{
		/// <summary>Side Navigation</summary>
		bool AllowInSideNav { get; }

		/// <summary>Eyebrow Navigation</summary>
		bool ShowInEyebrowNavigation { get; }

		/// <summary>Footer Navigation</summary>
		bool ShowInFooter { get; }

		/// <summary>Mega Menu Navigation</summary>
		bool ShowInMegamenu { get; }

		/// <summary>Drop Down Navigation</summary>
		bool ShowInNavigation { get; }
	}

	/// <summary>Navigation</summary>
	[PublishedContentModel("navigation")]
	public partial class Navigation : PublishedContentModel, INavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Navigation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Navigation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Side Navigation: This selection is used in conjunction with "Template 2" or "Template 4", in addition this is only for level 3 and 4 pages.
		///</summary>
		[ImplementPropertyType("allowInSideNav")]
		public bool AllowInSideNav
		{
			get { return GetAllowInSideNav(this); }
		}

		/// <summary>Static getter for Side Navigation</summary>
		public static bool GetAllowInSideNav(INavigation that) { return that.GetPropertyValue<bool>("allowInSideNav"); }

		///<summary>
		/// Eyebrow Navigation
		///</summary>
		[ImplementPropertyType("showInEyebrowNavigation")]
		public bool ShowInEyebrowNavigation
		{
			get { return GetShowInEyebrowNavigation(this); }
		}

		/// <summary>Static getter for Eyebrow Navigation</summary>
		public static bool GetShowInEyebrowNavigation(INavigation that) { return that.GetPropertyValue<bool>("showInEyebrowNavigation"); }

		///<summary>
		/// Footer Navigation
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return GetShowInFooter(this); }
		}

		/// <summary>Static getter for Footer Navigation</summary>
		public static bool GetShowInFooter(INavigation that) { return that.GetPropertyValue<bool>("showInFooter"); }

		///<summary>
		/// Mega Menu Navigation: This selection also determines what shows in the mobile navigation.
		///</summary>
		[ImplementPropertyType("showInMegamenu")]
		public bool ShowInMegamenu
		{
			get { return GetShowInMegamenu(this); }
		}

		/// <summary>Static getter for Mega Menu Navigation</summary>
		public static bool GetShowInMegamenu(INavigation that) { return that.GetPropertyValue<bool>("showInMegamenu"); }

		///<summary>
		/// Drop Down Navigation
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return GetShowInNavigation(this); }
		}

		/// <summary>Static getter for Drop Down Navigation</summary>
		public static bool GetShowInNavigation(INavigation that) { return that.GetPropertyValue<bool>("showInNavigation"); }
	}
}
