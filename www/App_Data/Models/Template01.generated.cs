//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Template 01</summary>
	[PublishedContentModel("template01")]
	public partial class Template01 : PublishedContentModel, INavigation, IPersonalNotes, IQuicklinkPanels, IQuoteBannerWithNav, ISEO, ITextBlock
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "template01";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Template01(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Template01, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Side Navigation: This selection is used in conjunction with "Template 2" or "Template 4", in addition this is only for level 3 and 4 pages.
		///</summary>
		[ImplementPropertyType("allowInSideNav")]
		public bool AllowInSideNav
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetAllowInSideNav(this); }
		}

		///<summary>
		/// Eyebrow Navigation
		///</summary>
		[ImplementPropertyType("showInEyebrowNavigation")]
		public bool ShowInEyebrowNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInEyebrowNavigation(this); }
		}

		///<summary>
		/// Footer Navigation
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInFooter(this); }
		}

		///<summary>
		/// Mega Menu Navigation: This selection also determines what shows in the mobile navigation.
		///</summary>
		[ImplementPropertyType("showInMegamenu")]
		public bool ShowInMegamenu
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInMegamenu(this); }
		}

		///<summary>
		/// Drop Down Navigation
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInNavigation(this); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("notes")]
		public IHtmlString Notes
		{
			get { return Umbraco.Web.PublishedContentModels.PersonalNotes.GetNotes(this); }
		}

		///<summary>
		/// Quicklinks: Select existing items from “Content } Data } Lower Quick Links”.  If this selection is left empty, the Lower Quick Links panel will be hidden. Best viewed when an even number of Lower Quick Links are selected.
		///</summary>
		[ImplementPropertyType("qlp_quicklinks")]
		public IEnumerable<IPublishedContent> Qlp_quicklinks
		{
			get { return Umbraco.Web.PublishedContentModels.QuicklinkPanels.GetQlp_quicklinks(this); }
		}

		///<summary>
		/// Drop Shadow
		///</summary>
		[ImplementPropertyType("dropShadow")]
		public object DropShadow
		{
			get { return Umbraco.Web.PublishedContentModels.QuoteBannerWithNav.GetDropShadow(this); }
		}

		///<summary>
		/// Author
		///</summary>
		[ImplementPropertyType("qwn_author")]
		public string Qwn_author
		{
			get { return Umbraco.Web.PublishedContentModels.QuoteBannerWithNav.GetQwn_author(this); }
		}

		///<summary>
		/// Background Image: The "FullBanner" crop will be used for the selected image.
		///</summary>
		[ImplementPropertyType("qwn_backgroundImage")]
		public IPublishedContent Qwn_backgroundImage
		{
			get { return Umbraco.Web.PublishedContentModels.QuoteBannerWithNav.GetQwn_backgroundImage(this); }
		}

		///<summary>
		/// Quote
		///</summary>
		[ImplementPropertyType("qwn_quote")]
		public string Qwn_quote
		{
			get { return Umbraco.Web.PublishedContentModels.QuoteBannerWithNav.GetQwn_quote(this); }
		}

		///<summary>
		/// Side Banner Links: Select existing items from “Content } Data } Banner Links”.    If this selection is left empty, the quote will take up the entire space.    A max number of eight items can be selected.
		///</summary>
		[ImplementPropertyType("qwn_sideNav")]
		public IEnumerable<IPublishedContent> Qwn_sideNav
		{
			get { return Umbraco.Web.PublishedContentModels.QuoteBannerWithNav.GetQwn_sideNav(this); }
		}

		///<summary>
		/// Text Alignment: Default is left aligned.
		///</summary>
		[ImplementPropertyType("qwn_textAlignment")]
		public object Qwn_textAlignment
		{
			get { return Umbraco.Web.PublishedContentModels.QuoteBannerWithNav.GetQwn_textAlignment(this); }
		}

		///<summary>
		/// Use Native Dimensions: Selecting this option will remove all parameters from the background image and use it's native style.
		///</summary>
		[ImplementPropertyType("useNativeDimensions")]
		public bool UseNativeDimensions
		{
			get { return Umbraco.Web.PublishedContentModels.QuoteBannerWithNav.GetUseNativeDimensions(this); }
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Hide page from XML Sitemap
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}

		///<summary>
		/// Optional Side Panel: The following is to display an optional side panel with navigation and ad space.
		///</summary>
		[ImplementPropertyType("lblOptionalSidePanel")]
		public string LblOptionalSidePanel
		{
			get { return Umbraco.Web.PublishedContentModels.TextBlock.GetLblOptionalSidePanel(this); }
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("tb_content")]
		public IHtmlString Tb_content
		{
			get { return Umbraco.Web.PublishedContentModels.TextBlock.GetTb_content(this); }
		}

		///<summary>
		/// Show Ad
		///</summary>
		[ImplementPropertyType("tb_showAd")]
		public bool Tb_showAd
		{
			get { return Umbraco.Web.PublishedContentModels.TextBlock.GetTb_showAd(this); }
		}

		///<summary>
		/// Show Side Navigation: Side navigations start at the 3rd level and will only show 3rd and 4th level nodes that are marked to show in side navigation.
		///</summary>
		[ImplementPropertyType("tb_showSideNavigation")]
		public bool Tb_showSideNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.TextBlock.GetTb_showSideNavigation(this); }
		}

		///<summary>
		/// Side on Right: Default is the let-hand side.  Select if the side panel is to appear on the right.
		///</summary>
		[ImplementPropertyType("tb_SideOnRight")]
		public bool Tb_SideOnRight
		{
			get { return Umbraco.Web.PublishedContentModels.TextBlock.GetTb_SideOnRight(this); }
		}
	}
}
