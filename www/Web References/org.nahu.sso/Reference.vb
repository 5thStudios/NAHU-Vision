'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace org.nahu.sso
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SSOSoap", [Namespace]:="http://ibc.sso/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(UserContainer))>  _
    Partial Public Class SSO
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ValidateLogOnOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FetchUserInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InitializeSessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateSessionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DisposeSessionByUserNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DisposeSessionByUserTokenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.mvcvb.My.MySettings.Default.mvcvb_org_nahu_members1_SSO
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ValidateLogOnCompleted As ValidateLogOnCompletedEventHandler
        
        '''<remarks/>
        Public Event FetchUserInfoCompleted As FetchUserInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event InitializeSessionCompleted As InitializeSessionCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateSessionCompleted As ValidateSessionCompletedEventHandler
        
        '''<remarks/>
        Public Event DisposeSessionByUserNameCompleted As DisposeSessionByUserNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DisposeSessionByUserTokenCompleted As DisposeSessionByUserTokenCompletedEventHandler
        
        '''<remarks/>
        Public Event VersionCompleted As VersionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ibc.sso/ValidateLogOn", RequestNamespace:="http://ibc.sso/", ResponseNamespace:="http://ibc.sso/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateLogOn(ByVal applicationInstance As Integer, ByVal userName As String, ByVal password As String, ByVal ipAddress As String, ByVal rememberMe As Boolean) As ValidationWrapper
            Dim results() As Object = Me.Invoke("ValidateLogOn", New Object() {applicationInstance, userName, password, ipAddress, rememberMe})
            Return CType(results(0),ValidationWrapper)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateLogOnAsync(ByVal applicationInstance As Integer, ByVal userName As String, ByVal password As String, ByVal ipAddress As String, ByVal rememberMe As Boolean)
            Me.ValidateLogOnAsync(applicationInstance, userName, password, ipAddress, rememberMe, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateLogOnAsync(ByVal applicationInstance As Integer, ByVal userName As String, ByVal password As String, ByVal ipAddress As String, ByVal rememberMe As Boolean, ByVal userState As Object)
            If (Me.ValidateLogOnOperationCompleted Is Nothing) Then
                Me.ValidateLogOnOperationCompleted = AddressOf Me.OnValidateLogOnOperationCompleted
            End If
            Me.InvokeAsync("ValidateLogOn", New Object() {applicationInstance, userName, password, ipAddress, rememberMe}, Me.ValidateLogOnOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateLogOnOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateLogOnCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateLogOnCompleted(Me, New ValidateLogOnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ibc.sso/FetchUserInfo", RequestNamespace:="http://ibc.sso/", ResponseNamespace:="http://ibc.sso/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FetchUserInfo(ByVal applicationInstance As Integer, ByVal userToken As String) As SSOUserContainer
            Dim results() As Object = Me.Invoke("FetchUserInfo", New Object() {applicationInstance, userToken})
            Return CType(results(0),SSOUserContainer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FetchUserInfoAsync(ByVal applicationInstance As Integer, ByVal userToken As String)
            Me.FetchUserInfoAsync(applicationInstance, userToken, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FetchUserInfoAsync(ByVal applicationInstance As Integer, ByVal userToken As String, ByVal userState As Object)
            If (Me.FetchUserInfoOperationCompleted Is Nothing) Then
                Me.FetchUserInfoOperationCompleted = AddressOf Me.OnFetchUserInfoOperationCompleted
            End If
            Me.InvokeAsync("FetchUserInfo", New Object() {applicationInstance, userToken}, Me.FetchUserInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnFetchUserInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.FetchUserInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FetchUserInfoCompleted(Me, New FetchUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ibc.sso/InitializeSession", RequestNamespace:="http://ibc.sso/", ResponseNamespace:="http://ibc.sso/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InitializeSession(ByVal applicationInstance As Integer, ByVal userName As String, ByVal ipAddress As String, ByVal timeout As Integer, ByVal rememberMe As Boolean) As System.Guid
            Dim results() As Object = Me.Invoke("InitializeSession", New Object() {applicationInstance, userName, ipAddress, timeout, rememberMe})
            Return CType(results(0),System.Guid)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InitializeSessionAsync(ByVal applicationInstance As Integer, ByVal userName As String, ByVal ipAddress As String, ByVal timeout As Integer, ByVal rememberMe As Boolean)
            Me.InitializeSessionAsync(applicationInstance, userName, ipAddress, timeout, rememberMe, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InitializeSessionAsync(ByVal applicationInstance As Integer, ByVal userName As String, ByVal ipAddress As String, ByVal timeout As Integer, ByVal rememberMe As Boolean, ByVal userState As Object)
            If (Me.InitializeSessionOperationCompleted Is Nothing) Then
                Me.InitializeSessionOperationCompleted = AddressOf Me.OnInitializeSessionOperationCompleted
            End If
            Me.InvokeAsync("InitializeSession", New Object() {applicationInstance, userName, ipAddress, timeout, rememberMe}, Me.InitializeSessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnInitializeSessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.InitializeSessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InitializeSessionCompleted(Me, New InitializeSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ibc.sso/ValidateSession", RequestNamespace:="http://ibc.sso/", ResponseNamespace:="http://ibc.sso/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateSession(ByVal applicationInstance As Integer, ByVal userToken As String) As Boolean
            Dim results() As Object = Me.Invoke("ValidateSession", New Object() {applicationInstance, userToken})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateSessionAsync(ByVal applicationInstance As Integer, ByVal userToken As String)
            Me.ValidateSessionAsync(applicationInstance, userToken, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateSessionAsync(ByVal applicationInstance As Integer, ByVal userToken As String, ByVal userState As Object)
            If (Me.ValidateSessionOperationCompleted Is Nothing) Then
                Me.ValidateSessionOperationCompleted = AddressOf Me.OnValidateSessionOperationCompleted
            End If
            Me.InvokeAsync("ValidateSession", New Object() {applicationInstance, userToken}, Me.ValidateSessionOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateSessionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateSessionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateSessionCompleted(Me, New ValidateSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ibc.sso/DisposeSessionByUserName", RequestNamespace:="http://ibc.sso/", ResponseNamespace:="http://ibc.sso/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DisposeSessionByUserName(ByVal applicationInstance As Integer, ByVal userName As String) As Boolean
            Dim results() As Object = Me.Invoke("DisposeSessionByUserName", New Object() {applicationInstance, userName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DisposeSessionByUserNameAsync(ByVal applicationInstance As Integer, ByVal userName As String)
            Me.DisposeSessionByUserNameAsync(applicationInstance, userName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisposeSessionByUserNameAsync(ByVal applicationInstance As Integer, ByVal userName As String, ByVal userState As Object)
            If (Me.DisposeSessionByUserNameOperationCompleted Is Nothing) Then
                Me.DisposeSessionByUserNameOperationCompleted = AddressOf Me.OnDisposeSessionByUserNameOperationCompleted
            End If
            Me.InvokeAsync("DisposeSessionByUserName", New Object() {applicationInstance, userName}, Me.DisposeSessionByUserNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDisposeSessionByUserNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DisposeSessionByUserNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DisposeSessionByUserNameCompleted(Me, New DisposeSessionByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ibc.sso/DisposeSessionByUserToken", RequestNamespace:="http://ibc.sso/", ResponseNamespace:="http://ibc.sso/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DisposeSessionByUserToken(ByVal applicationInstance As Integer, ByVal userToken As String) As Boolean
            Dim results() As Object = Me.Invoke("DisposeSessionByUserToken", New Object() {applicationInstance, userToken})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DisposeSessionByUserTokenAsync(ByVal applicationInstance As Integer, ByVal userToken As String)
            Me.DisposeSessionByUserTokenAsync(applicationInstance, userToken, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisposeSessionByUserTokenAsync(ByVal applicationInstance As Integer, ByVal userToken As String, ByVal userState As Object)
            If (Me.DisposeSessionByUserTokenOperationCompleted Is Nothing) Then
                Me.DisposeSessionByUserTokenOperationCompleted = AddressOf Me.OnDisposeSessionByUserTokenOperationCompleted
            End If
            Me.InvokeAsync("DisposeSessionByUserToken", New Object() {applicationInstance, userToken}, Me.DisposeSessionByUserTokenOperationCompleted, userState)
        End Sub
        
        Private Sub OnDisposeSessionByUserTokenOperationCompleted(ByVal arg As Object)
            If (Not (Me.DisposeSessionByUserTokenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DisposeSessionByUserTokenCompleted(Me, New DisposeSessionByUserTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ibc.sso/Version", RequestNamespace:="http://ibc.sso/", ResponseNamespace:="http://ibc.sso/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Version() As String
            Dim results() As Object = Me.Invoke("Version", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VersionAsync()
            Me.VersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VersionAsync(ByVal userState As Object)
            If (Me.VersionOperationCompleted Is Nothing) Then
                Me.VersionOperationCompleted = AddressOf Me.OnVersionOperationCompleted
            End If
            Me.InvokeAsync("Version", New Object(-1) {}, Me.VersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.VersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VersionCompleted(Me, New VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ibc.sso/")>  _
    Partial Public Class ValidationWrapper
        
        Private isValidatedField As Boolean
        
        Private sessionTokenField As String
        
        Private statusMessageField As String
        
        Private imisUserIdField As String
        
        Private cookieStructuresField() As CookieStructure
        
        '''<remarks/>
        Public Property IsValidated() As Boolean
            Get
                Return Me.isValidatedField
            End Get
            Set
                Me.isValidatedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SessionToken() As String
            Get
                Return Me.sessionTokenField
            End Get
            Set
                Me.sessionTokenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatusMessage() As String
            Get
                Return Me.statusMessageField
            End Get
            Set
                Me.statusMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ImisUserId() As String
            Get
                Return Me.imisUserIdField
            End Get
            Set
                Me.imisUserIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CookieStructures() As CookieStructure()
            Get
                Return Me.cookieStructuresField
            End Get
            Set
                Me.cookieStructuresField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ibc.sso/")>  _
    Partial Public Class CookieStructure
        
        Private nameField As String
        
        Private valueField As String
        
        Private domainField As String
        
        Private pathField As String
        
        Private expiresField As String
        
        Private isHttpOnlyField As Boolean
        
        Private isSecureField As Boolean
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Domain() As String
            Get
                Return Me.domainField
            End Get
            Set
                Me.domainField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Expires() As String
            Get
                Return Me.expiresField
            End Get
            Set
                Me.expiresField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsHttpOnly() As Boolean
            Get
                Return Me.isHttpOnlyField
            End Get
            Set
                Me.isHttpOnlyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSecure() As Boolean
            Get
                Return Me.isSecureField
            End Get
            Set
                Me.isSecureField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(SSOUserContainer)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ibc.sso/")>  _
    Partial Public Class UserContainer
        
        Private prefixField As String
        
        Private suffixField As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private fullNameField As String
        
        Private workPhoneField As String
        
        Private companyNameField As String
        
        Private emailAddressField As String
        
        Private memberTypeField As String
        
        Private imisIdField As String
        
        Private extensionDataField As System.Xml.XmlElement
        
        '''<remarks/>
        Public Property Prefix() As String
            Get
                Return Me.prefixField
            End Get
            Set
                Me.prefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Suffix() As String
            Get
                Return Me.suffixField
            End Get
            Set
                Me.suffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FullName() As String
            Get
                Return Me.fullNameField
            End Get
            Set
                Me.fullNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkPhone() As String
            Get
                Return Me.workPhoneField
            End Get
            Set
                Me.workPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyName() As String
            Get
                Return Me.companyNameField
            End Get
            Set
                Me.companyNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddress() As String
            Get
                Return Me.emailAddressField
            End Get
            Set
                Me.emailAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberType() As String
            Get
                Return Me.memberTypeField
            End Get
            Set
                Me.memberTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ImisId() As String
            Get
                Return Me.imisIdField
            End Get
            Set
                Me.imisIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyElementAttribute(Name:="ExtensionData", [Namespace]:="http://ibc.ssoprovider/")>  _
        Public Property ExtensionData() As System.Xml.XmlElement
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://ibc.sso/")>  _
    Partial Public Class SSOUserContainer
        Inherits UserContainer
        
        Private webLoginField As String
        
        '''<remarks/>
        Public Property WebLogin() As String
            Get
                Return Me.webLoginField
            End Get
            Set
                Me.webLoginField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub ValidateLogOnCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateLogOnCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateLogOnCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ValidationWrapper
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ValidationWrapper)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub FetchUserInfoCompletedEventHandler(ByVal sender As Object, ByVal e As FetchUserInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FetchUserInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSOUserContainer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSOUserContainer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub InitializeSessionCompletedEventHandler(ByVal sender As Object, ByVal e As InitializeSessionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InitializeSessionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Guid
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Guid)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub ValidateSessionCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateSessionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateSessionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub DisposeSessionByUserNameCompletedEventHandler(ByVal sender As Object, ByVal e As DisposeSessionByUserNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DisposeSessionByUserNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub DisposeSessionByUserTokenCompletedEventHandler(ByVal sender As Object, ByVal e As DisposeSessionByUserTokenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DisposeSessionByUserTokenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub VersionCompletedEventHandler(ByVal sender As Object, ByVal e As VersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
